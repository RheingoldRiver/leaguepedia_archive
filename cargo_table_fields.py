from lxml import html
import requests

wikis = [
  "100orangejuice",
  "animalcrossingpocketcamp",
  "apexlegends-esports",
  "archeage",
  "ark",
  "ark-fr",
  "ark-ptbr",
  "ark-es",
  "ark-it",
  "ark-de",
  "ark-pl",
  "ark-ru",
  "artifact",
  "atlas",
  "bproject",
  "battleriteroyale",
  "battlerite",
  "bindingofisaacrebirth",
  "bindingofisaacrebirth-fr",
  "blackdesertonline",
  "blackdesertonline-ptbr",
  "blacksurvival",
  "boundless",
  "bravefrontier2",
  "breach",
  "calamitymod",
  "cod-esports",
  "cardlife",
  "cavesofqud",
  "childrenofmorta",
  "clockworkempires",
  "gamicus",
  "collective",
  "conanexiles",
  "conanexiles-fr",
  "conanexiles-ptbr",
  "conanexiles-zh",
  "conanexiles-it",
  "conanexiles-pl",
  "conanexiles-de",
  "darkandlight",
  "dauntless",
  "dauntless-ru",
  "destiny2",
  "dirtybomb",
  "dota2",
  "dota2-pt",
  "dota2-zh",
  "dota2-ru",
  "dotaunderlords",
  "dragalialost",
  "dragalialost-zh",
  "duelofsummoners",
  "dungeonmaker",
  "dungeonmaker-ja",
  "eco",
  "eco-de",
  "eco-ja",
  "eco-fr",
  "eco-ru",
  "eco-zh",
  "edgeofeternity",
  "empyrion",
  "epicseven",
  "commons-esports",
  "esports",
  "exaltedmush",
  "fifa-esports",
  "feheroes",
  "fewarriors",
  "firefall",
  "fortnite-esports",
  "fortnite",
  "fortnite-ptbr",
  "fortnite-it",
  "fortnite-de",
  "fractured",
  "frostpunk",
  "futuramaworldsoftomorrow",
  "help-pl",
  "help-pt",
  "help-es",
  "help-de",
  "help-fr",
  "help-nl",
  "help-it",
  "help-zh",
  "gears-esports",
  "graveyardkeeper-ru",
  "guildwiki",
  "halo-esports",
  "hearthstone",
  "heroesofthestorm",
  "highscores",
  "hyperuniverse",
  "icarus-ru",
  "kamenridercitywars",
  "kogama",
  "kyn",
  "langrisser",
  "lastepoch",
  "lol",
  "letitdie",
  "lifeisfeudal-de",
  "littlewood",
  "worldofmayhem",
  "maplestory2",
  "masterofeternity",
  "mwo",
  "meeseeks",
  "milmo",
  "milmo-ptbr",
  "minecraft-nl",
  "minionmasters",
  "mobius",
  "moonlighter",
  "moonlighter-ptbr",
  "mythgard",
  "nba2k-esports",
  "neverwinter-ru",
  "nexustk",
  "nomanssky",
  "nomanssky-es",
  "nomanssky-fr",
  "outpostzero",
  "outward",
  "overwatch",
  "paladins-esports",
  "pathofexile",
  "pathofexile-de",
  "pathofexile-ru",
  "pillarsofeternity",
  "pixark",
  "pokemongo-es",
  "pokkentournament",
  "prismata",
  "pubg-esports",
  "pwi",
  "siege-esports",
  "realmroyale",
  "rend",
  "ridersoficarus",
  "rl-esports",
  "rocketleague",
  "roguefrontiers",
  "rust",
  "satisfactory",
  "satisfactory-de",
  "satisfactory-fr",
  "satisfactory-ru",
  "scrambledgalaxy",
  "scum",
  "seaofthieves",
  "seaofthieves-es",
  "seaofthieves-de",
  "seaofthieves-zh",
  "shroudoftheavatar",
  "smite-esports",
  "smite",
  "spacetyrant",
  "spiritmod",
  "spyro",
  "squad",
  "startrekadversaries",
  "sto",
  "sto-de",
  "swtor",
  "swtor-ru",
  "swtor-de",
  "stormboundkingdomwars",
  "strandeddeep",
  "strife",
  "superterrariaworld",
  "swagandsorcery",
  "swagandsorcery-de",
  "teamfighttactics",
  "telarapedia",
  "temtem",
  "temtem-es",
  "temtem-fr",
  "terrabattle2",
  "terraria",
  "terraria-fr",
  "terraria-ru",
  "terraria-pt",
  "terraria-pl",
  "terraria-zh",
  "terraria-uk",
  "terraria-de",
  "terraria-hu",
  "thealchemistcode",
  "antibirth",
  "bindingofisaacfoursouls",
  "thecycle",
  "theforest",
  "tmole",
  "moddingofisaac",
  "fallout",
  "transformersthedarkeras",
  "tyranny",
  "tyranny-ru",
  "vg-esports",
  "vindictus",
  "volcanoids",
  "voxeltycoon-ru",
  "wardragons",
  "wikisandbox",
  "wildstar",
  "wizardoflegend",
  "wow",
  "yokaiwatch",
  "zelda",
  "zelda-fr",
  "help-ru"
]

errors = []

for wiki in wikis:
	base_url = 'https://%s.gamepedia.com/Special:CargoTables/' % wiki
	
	page = requests.get(base_url)
	tree = html.fromstring(page.content)
	
	tables = tree.xpath('//*[@id="mw-content-text"]//li/text()[1]')
	
	table_names = []
	for table in tables:
		table_name = table.replace(' (', '')
		if table_name != '_pageData':
			table_names.append(table_name)
	
	msg = 'Starting wiki: ' + wiki + ', tables: ' + ', '.join(table_names)
	print(msg)
	for table_name in table_names:
		table_url = base_url + table_name
		table_page = requests.get(table_url)
		table_tree = html.fromstring(table_page.content)
		fields = table_tree.xpath('//*[@id="mw-content-text"]//li//strong/text()')
		for field in fields:
			if '-' in field:
				errors.append(wiki + ' ' + table_name + ' ' + field)

with open('cargo_dash_field_errors.txt', 'w+') as f:
	f.write('\n'.join(errors))
